name: Build courier and courier-libs

on:
  workflow_call:
    inputs:
      thisrepo:
        description: 'courier repository'
        required: false
        type: string
        default: ${{ github.repository }}
      thisbranch:
        description: 'courier repository branch'
        required: false
        type: string
        default: ${{ github.ref }}
      libsrepo:
        description: 'courier-libs repository'
        required: true
        type: string
      libsbranch:
        description: 'courier-libs repository branch'
        required: true
        type: string

jobs:
  # Bootstrap tarballs of common packages:
  #    sysconftool, courier-unicode, courier-authlib and courier-sox
  #
  # Upload their constructed tarballs as artifacts
  #
  # Build them into rpms, and upload an artifact of the common rpms.

  make_common_dist_rpms:
    runs-on: ubuntu-latest
    container:
      image: "fedora:latest"
    steps:
      - name: Check out the ${{ inputs.thisrepo }} repository (${{ inputs.thisbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.thisrepo }}
          ref: ${{ inputs.thisbranch }}
          path: '.'

      - name: Check out the ${{ inputs.libsrepo }} repository (${{ inputs.libsbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.libsrepo }}
          ref: ${{ inputs.libsbranch }}
          path: libs

      - name: Install dependencies
        run: |
          sh ci-scripts/make_dist_installdeps

      - name: Install the ${{ inputs.libsrepo }} repository
        run: |
          cp -al libs sysconftool
          cp -al libs courier-authlib
          cp -al libs courier-sox
          mkdir rpm
          mkdir -p $HOME/bin
          echo '#! /bin/sh' >$HOME/bin/rpmrepos.sh
          chmod +x $HOME/bin/rpmrepos.sh

      - name: Build sysconftool
        run: |
          set -evx
          . ci-scripts/make_dist_environment
          cd sysconftool
          sh ./autobloat
          ./configure
          make
          make check
          make dist
          make rpm
          rpm -ivh rpm/RPMS/noarch/*.rpm
          mv rpm/RPMS/*/*.rpm ../rpm/.

      - name: Build courier-unicode
        run: |
          set -evx
          . ci-scripts/make_dist_environment
          cd libs/unicode
          sh ./autobloat
          ./configure
          make -j2
          # make check -- not very useful, burns too much CPU
          make dist
          make rpm
          rm -f rpm/RPMS/*/*debuginfo*
          rm -f rpm/RPMS/*/*debugsource*
          rpm -ivh rpm/RPMS/*/*rpm
          mv rpm/RPMS/*/*rpm ../../rpm/.

      - name: Build courier-authlib
        run: |
          set -evx
          . ci-scripts/make_dist_environment
          cd courier-authlib
          env ACLOCAL_PATH=/usr/local/share/aclocal sh ./autobloat
          ./configure
          make -j2
          make dist
          make rpm
          rm -f rpm/RPMS/*/*debuginfo*
          rm -f rpm/RPMS/*/*debugsource*
          mv rpm/RPMS/*/courier-authlib-devel*rpm ../rpm/.
          mv rpm/RPMS/*/courier-authlib-config*rpm ../rpm/.
          rm -f rpm/RPMS/*/courier-authlib-*-*-*rpm
          mv rpm/RPMS/*/courier-authlib*rpm ../rpm/.
          rpm -ivh ../rpm/courier-authlib*rpm

      - name: Build courier-sox
        run: |
          set -evx
          . ci-scripts/make_dist_environment
          cd courier-sox
          env ACLOCAL_PATH=/usr/local/share/aclocal sh ./autobloat
          ./configure
          make -j2
          make dist
          make rpm
          rm -f rpm/RPMS/*/*debuginfo*
          rm -f rpm/RPMS/*/*debugsource*
          rm -f rpm/RPMS/*/*server*
          rm -f rpm/RPMS/*/*utils*
          mv rpm/RPMS/*/*rpm ../rpm/.
          rpm -ivh ../rpm/courier-sox*rpm

      - name: Upload sysconftool tarball
        uses: actions/upload-artifact@v4
        with:
          name: sysconftool
          path: "sysconftool/*.tar.bz2"

      - name: Upload courier-unicode tarball
        uses: actions/upload-artifact@v4
        with:
          name: courier-unicode
          path: "libs/unicode/*.tar.bz2"

      - name: Upload courier-authlib tarball
        uses: actions/upload-artifact@v4
        with:
          name: courier-authlib
          path: "courier-authlib/*.tar.bz2"

      - name: Upload courier-sox tarball
        uses: actions/upload-artifact@v4
        with:
          name: courier-sox
          path: "courier-sox/*.tar.bz2"

      - name: Upload common dist rpms
        uses: actions/upload-artifact@v4
        with:
          name: distrpms
          path: "rpm/*.rpm"

      - name: Uninstall rpms
        run: |
          dnf remove -y sysconftool courier-authlib courier-authlib-uidgid courier-unicode courier-sox

  # Bootstrap tarballs of projects
  #
  # Download the artifact of common rpms and install them before building
  # each project. Build the tarballs and rpms.
  #
  # Upload each project's tarball
  make_dist:
    needs: make_common_dist_rpms
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - name: Check out the ${{ inputs.thisrepo }} repository (${{ inputs.thisbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.thisrepo }}
          ref: ${{ inputs.thisbranch }}
          path: '.'

      - name: Check out the ${{ inputs.libsrepo }} repository (${{ inputs.libsbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.libsrepo }}
          ref: ${{ inputs.libsbranch }}
          path: libs

      - name: Install dependencies
        run: |
          sh ci-scripts/make_dist_installdeps

      - name: Download common dist rpms
        uses: actions/download-artifact@v4
        with:
          name: distrpms

      - name: Install common dist rpms
        run: |
          set -evx
          rpm -ivh *.rpm
          mkdir -p $HOME/bin
          echo '#! /bin/sh' >$HOME/bin/rpmrepos.sh
          chmod +x $HOME/bin/rpmrepos.sh

      - name: Build ${{ matrix.project }} dist
        run: |
          set -evx
          cp -al libs ${{ matrix.project }}
          cd ${{ matrix.project }}
          env ACLOCAL_PATH=/usr/local/share/aclocal sh ./autobloat
          ./configure --with-notice=unicode --disable-root-check
          make -j2
          # courier rpm build runs make check
          make dist
          make rpm

      - name: Upload dist for ${{ matrix.project }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}
          path: "${{ matrix.project }}/*.tar.bz2"

    strategy:
      matrix:
        project:
          - cone
          - courier-analog
          - courier-imap
          - courier
          - maildrop
          - sqwebmail

  # Build common packages, upload <platform>-shared-packages artifact
  #
  # Centos/Rocky: contains rpms of common packages
  #
  # Ubuntu: contains debs of common packages
  #
  # Arch: contains *.img.tar.bz2 of 'make install' of common packages

  build_common_packages:
    needs: make_common_dist_rpms
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.platform[0] }}
    steps:
      - name: Check out the ${{ inputs.thisrepo }} repository (${{ inputs.thisbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.thisrepo }}
          ref: ${{ inputs.thisbranch }}
          path: '.'

      - name: Download sysconftool tarball
        uses: actions/download-artifact@v4
        with:
          name: sysconftool

      - name: Download courier-unicode tarball
        uses: actions/download-artifact@v4
        with:
          name: courier-unicode

      - name: Download courier-authlib tarball
        uses: actions/download-artifact@v4
        with:
          name: courier-authlib

      - name: Download courier-sox tarball
        uses: actions/download-artifact@v4
        with:
          name: courier-sox

      - name: Build shared packages
        run: |
          set -evx
          sh ci-scripts/${{ matrix.platform[1] }}/build_shared_setup
          rm -rf packages
          mkdir packages
          rm -rf build
          mkdir build
          mv sysconftool-* build
          sh ci-scripts/${{ matrix.platform[1] }}/build_shared sysconftool
          rm -rf build
          mkdir build
          mv courier-unicode-* build
          sh ci-scripts/${{ matrix.platform[1] }}/build_shared courier-unicode
          rm -rf build
          mkdir build
          mv courier-authlib-* build
          sh ci-scripts/${{ matrix.platform[1] }}/build_shared courier-authlib
          rm -rf build
          mkdir build
          mv courier-sox-* build
          sh ci-scripts/${{ matrix.platform[1] }}/build_shared courier-sox

      - name: Upload shared for ${{ matrix.platform[1] }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform[2] }}-shared-packages
          path: "packages/*"

    strategy:
      matrix:
        platform:
           - ["rockylinux:8",     "rocky",     "rocky-8"]
           - ["rockylinux:9",     "rocky",     "rocky-9"]
           - ["ubuntu:20.04",     "ubuntu-gcc10",    "ubuntu-20"]
           - ["ubuntu:22.04",     "ubuntu",    "ubuntu-22"]
           - ["ubuntu:24.04",     "ubuntu",    "ubuntu-24"]
           - ["ubuntu:24.04",     "ubuntu-clang20",    "ubuntu-24-clang"]
           - ["debian:12",        "ubuntu",    "debian-12"]
           - ["debian:13",        "ubuntu",    "debian-13"]
           - ["archlinux:latest", "arch",      "arch"]

  # Build the main packages
  #
  # Download <platform>-shared-package, install them, build each main package.

  build_all:
    needs: [ build_common_packages, make_dist ]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.platform[0] }}
    steps:
      - name: Check out the ${{ inputs.thisrepo }} repository (${{ inputs.thisbranch }})
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.thisrepo }}
          ref: ${{ inputs.thisbranch }}
          path: '.'

      - name: Download shared packages
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform[2] }}-shared-packages

      - name: Install dependencies and shared packages
        run: |
          sh ci-scripts/${{ matrix.platform[1] }}/build_all_setup

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.project }}

      - name: Build package
        run: |
          sh ci-scripts/${{ matrix.platform[1] }}/build_all ${{ matrix.project }}

    strategy:
      matrix:
        platform:
           - ["rockylinux:8",     "rocky",     "rocky-8"]
           - ["rockylinux:9",     "rocky",     "rocky-9"]
           - ["ubuntu:20.04",     "ubuntu-gcc10",    "ubuntu-20"]
           - ["ubuntu:22.04",     "ubuntu",    "ubuntu-22"]
           - ["ubuntu:24.04",     "ubuntu",    "ubuntu-24"]
           - ["ubuntu:24.04",     "ubuntu-clang20",    "ubuntu-24-clang"]
           - ["debian:12",        "ubuntu",    "debian-12"]
           - ["debian:13",        "ubuntu",    "debian-13"]
           - ["archlinux:latest", "arch",      "arch"]
        project:
          - cone
          - courier-analog
          - courier-imap
          - courier
          - maildrop
          - sqwebmail
